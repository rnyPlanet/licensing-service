version: '2.1'

services:
  database:
    build: ./db_init
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: ostock_dev
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      backend:
        aliases:
          - database

  configserver:
    build: ./../configserver
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - configserver

  eurekaserver:
    build: ./../eurekaserver
    ports:
      - "8070:8070"
    environment:
      SPRING_PROFILES_ACTIVE: dock
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/ostock_dev
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - eurekaserver

  gatewayserver:
    build: ./../gatewayserver
    ports:
      - "8072:8072"
    environment:
      SPRING_PROFILES_ACTIVE: dock
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/ostock_dev
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"

  licensingservice:
    build: ./../licensing-service
    environment:
      SPRING_PROFILES_ACTIVE: dock
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/ostock_dev
    ports:
      - "8081:8081"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    networks:
      - backend
    links:
      - database

  organizationservice:
    build: ./../organization-service
    environment:
      SPRING_PROFILES_ACTIVE: dock
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/ostock_dev
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    ports:
      - "8082:8082"
    networks:
      - backend


  zookeeper:
    image: zookeeper:latest
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - zookeeper

  kafkaserver:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - kafka

  redisserver:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - redis

networks:
  backend:
    driver: bridge